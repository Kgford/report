from django.shortcuts import render, redirect, resolve_urlfrom users.forms import UserForm,UserProfileInfoFormfrom django.contrib.auth import authenticate, login, logoutfrom django.http import HttpResponseRedirect, HttpResponsefrom django.urls import reverse, reverse_lazyfrom django.contrib.auth.decorators import login_requiredfrom report.settings import LOGIN_REDIRECT_URLdef index(request):	return render(request,'users/index.html')@login_requireddef special(request):    return HttpResponse("You are logged in !")@login_requireddef user_logout(request):    success_url = reverse_lazy('users:logout')    logout(request)    #return HttpResponseRedirect(reverse('public:public'))    return render(request,'users/index.html')		def register(request):	registered = False	if request.method == 'POST':		user_form = UserForm(data=request.POST)		profile_form = UserProfileInfoForm(data=request.POST)		if user_form.is_valid() and profile_form.is_valid():			user = user_form.save()			user.set_password(user.password)			user.save()			profile = profile_form.save(commit=False)			profile.user = user			if 'profile_pic' in request.FILES:				print('found it')				profile.profile_pic = request.FILES['profile_pic']			profile.save()			registered = True		else:			print(user_form.errors,profile_form.errors)	else:		user_form = UserForm()		profile_form = UserProfileInfoForm()	return render(request,'users/registration.html',{'user_form':user_form,	'profile_form':profile_form,'registered':registered})						def password_reset(request):    success_url = reverse_lazy('users:password_reset')    return render(request,'users/password_reset_form.html')def user_login(request):    success_url = reverse_lazy('users:user_login')    operator = ''    if request.method == 'GET':        direct_to = request.GET.get('next')            #operator = str(request.user.get_short_name())    if request.method == 'POST':        username = request.POST.get('username')        password = request.POST.get('password')        direct_to = request.POST.get('_url',1)        print('direct_to=',direct_to)        if not direct_to=='None':            split = direct_to.split('/')            #print('split=',split)            direct_to = split[1] + ":" + split[2]             #print('direct_to=',direct_to)        user = authenticate(username=username, password=password)        if user:            if user.is_active:                login(request,user)                operator = str(request.user.get_short_name())                redirect_to = resolve_url(LOGIN_REDIRECT_URL)                #print('operator =',operator)                if not direct_to=='None':                    #print('direct_to=',direct_to)                    return render(request,'users/index.html', {'direct_to':direct_to,'operator':operator})                else:                    #print('direct_to=',direct_to)                    return render(request,'users/index.html', {'direct_to':direct_to,'operator':operator})            else:                #print('direct_to=',direct_to)                return render(request,'users/index.html', {'direct_to':direct_to,'operator':operator})        else:            #print("Someone tried to login and failed.")            #print("They used username: {} and password: {}".format(username,password))            return render(request,'users/index.html', {'direct_to':direct_to,'operator':operator})    else:        #print('GET direct_to=',direct_to)        return render(request, 'users/login.html', {'direct_to':direct_to,'operator':operator})					